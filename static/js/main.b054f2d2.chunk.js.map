{"version":3,"sources":["enums/sortType.ts","components/goods.tsx","App.tsx","getReorderedGoods.ts","index.tsx"],"names":["SortType","Goods","goods","map","good","React","memo","goodsFromServer","App","state","isReversed","sortType","NONE","showResetButton","alphSort","event","target","setState","ALPHABET","classList","contains","lengthSort","LENGTH","reversed","currentTarget","parentEl","parentElement","alphButton","children","lenghtButton","prevState","reset","this","reorderedGoods","visibleGoods","sort","g1","g2","localeCompare","length","reverse","getReorderedGoods","className","onClick","type","classNames","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAAYA,E,oGAAAA,K,YAAAA,E,oBAAAA,E,iBAAAA,M,gBCMNC,EAAyB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAChC,OACE,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,SAMFC,MAAMC,KAAKL,G,OCRnB,IAAMM,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAUWC,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUX,EAASY,KACnBC,iBAAiB,GAJrB,EAOEC,SAAW,SAACC,GACV,IAAMC,EAASD,EAAMC,OAErB,EAAKC,SAAS,CACZN,SAAUX,EAASkB,WAEjBF,EAAOG,UAAUC,SAAS,aAC5B,EAAKH,SAAS,CACZJ,iBAAiB,KAfzB,EAoBEQ,WAAa,SAACN,GACZ,IAAMC,EAASD,EAAMC,OAErB,EAAKC,SAAS,CACZN,SAAUX,EAASsB,SAGjBN,EAAOG,UAAUC,SAAS,aAC5B,EAAKH,SAAS,CACZJ,iBAAiB,KA7BzB,EAkCEU,SAAW,SAACR,GACV,IAAMC,EAASD,EAAMS,cACfC,EAAWT,EAAOU,cAElBC,EAAaF,EAASG,SAAS,GAC/BC,EAAeJ,EAASG,SAAS,GAEnCZ,EAAOG,UAAUC,SAAS,YAC5B,EAAKH,SAAS,CACZJ,iBAAiB,IAEVc,EAAWR,UAAUC,SAAS,aAClCS,EAAaV,UAAUC,SAAS,aACrC,EAAKH,SAAS,CACZJ,iBAAiB,IAIrB,EAAKI,UAAS,SAAAa,GAAS,MAAK,CAC1BpB,YAAaoB,EAAUpB,gBArD7B,EAyDEqB,MAAQ,WACN,EAAKd,SAAS,CACZN,SAAUX,EAASY,KACnBF,YAAY,EACZG,iBAAiB,KA7DvB,4CAiEE,WACE,MAAkDmB,KAAKvB,MAA/CE,EAAR,EAAQA,SAAUD,EAAlB,EAAkBA,WAAYG,EAA9B,EAA8BA,gBAExBoB,ECxFH,SACL/B,EADK,GAGJ,IADCS,EACF,EADEA,SAAUD,EACZ,EADYA,WAGNwB,EAAY,YAAOhC,GAEzB,OAAQS,GACN,IAAK,WACHuB,EAAaC,MAAK,SAACC,EAAIC,GACrB,OAAOD,EAAGE,cAAcD,MAE1B,MACF,IAAK,SACHH,EAAaC,MAAK,SAACC,EAAIC,GACrB,OAAOD,EAAGG,OAASF,EAAGE,UAU5B,OAJI7B,GACFwB,EAAaM,UAGRN,ED+DkBO,CACrBlC,EACA,CAAEI,WAAUD,eAId,OACE,sBAAKgC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAASX,KAAKlB,SACd8B,KAAK,SACLF,UAAWG,IACT,SAAU,UACV,CACE,WAAyB,aAAblC,IANlB,iCAaA,wBACEgC,QAASX,KAAKX,WACduB,KAAK,SACLF,UAAWG,IACT,SAAU,aACV,CACE,WAAyB,WAAblC,IANlB,4BAaA,wBACEgC,QAASX,KAAKT,SACdqB,KAAK,SACLF,UAAWG,IACT,SAAU,aACV,CACE,YAA2B,IAAfnC,IANlB,qBAaCG,GAEG,wBACE+B,KAAK,SACLF,UAAU,4BACVC,QAASX,KAAKD,MAHhB,sBAUN,cAAC,EAAD,CAAO7B,MAAO+B,WAhItB,GAAyB5B,IAAMyC,WEzB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b054f2d2.chunk.js","sourcesContent":["export enum SortType {\n  NONE = 'none',\n  ALPHABET = 'alphabet',\n  LENGTH = 'length',\n}\n","import React from 'react';\n\ntype Props = {\n  goods: string[];\n};\n\nconst Goods: React.FC<Props> = ({ goods }) => {\n  return (\n    <ul>\n      {goods.map(good => (\n        <li key={good} data-cy=\"Good\">{good}</li>\n      ))}\n    </ul>\n  );\n};\n\nexport default React.memo(Goods);\n","import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\nimport { SortType } from './enums/sortType';\nimport Goods from './components/goods';\nimport { getReorderedGoods } from './getReorderedGoods';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\n// DON'T save goods to the state\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n  showResetButton: boolean,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n    showResetButton: false,\n  };\n\n  alphSort = (event: React.MouseEvent<HTMLElement>) => {\n    const target = event.target as Element;\n\n    this.setState({\n      sortType: SortType.ALPHABET,\n    });\n    if (target.classList.contains('is-light')) {\n      this.setState({\n        showResetButton: true,\n      });\n    }\n  };\n\n  lengthSort = (event: React.MouseEvent<HTMLElement>) => {\n    const target = event.target as Element;\n\n    this.setState({\n      sortType: SortType.LENGTH,\n    });\n\n    if (target.classList.contains('is-light')) {\n      this.setState({\n        showResetButton: true,\n      });\n    }\n  };\n\n  reversed = (event: React.MouseEvent<HTMLElement>) => {\n    const target = event.currentTarget as Element;\n    const parentEl = target.parentElement as Element;\n\n    const alphButton = parentEl.children[0] as Element;\n    const lenghtButton = parentEl.children[1] as Element;\n\n    if (target.classList.contains('is-light')) {\n      this.setState({\n        showResetButton: true,\n      });\n    } else if (alphButton.classList.contains('is-light')\n        && lenghtButton.classList.contains('is-light')) {\n      this.setState({\n        showResetButton: false,\n      });\n    }\n\n    this.setState(prevState => ({\n      isReversed: !prevState.isReversed,\n    }));\n  };\n\n  reset = () => {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n      showResetButton: false,\n    });\n  };\n\n  render() {\n    const { sortType, isReversed, showResetButton } = this.state;\n\n    const reorderedGoods = getReorderedGoods(\n      goodsFromServer,\n      { sortType, isReversed },\n    );\n\n    // const removeBut = document.querySelector(\".is-danger\");\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            onClick={this.alphSort}\n            type=\"button\"\n            className={classNames(\n              'button', 'is-info',\n              {\n                'is-light': sortType !== 'alphabet',\n              },\n            )}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            onClick={this.lengthSort}\n            type=\"button\"\n            className={classNames(\n              'button', 'is-success',\n              {\n                'is-light': sortType !== 'length',\n              },\n            )}\n          >\n            Sort by length\n          </button>\n\n          <button\n            onClick={this.reversed}\n            type=\"button\"\n            className={classNames(\n              'button', 'is-warning',\n              {\n                'is-light': isReversed !== true,\n              },\n            )}\n          >\n            Reverse\n          </button>\n\n          {showResetButton\n            && (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={this.reset}\n              >\n                Reset\n              </button>\n            )}\n        </div>\n\n        <Goods goods={reorderedGoods} />\n\n      </div>\n    );\n  }\n}\n","import { SortType } from './enums/sortType';\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render method to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case 'alphabet':\n      visibleGoods.sort((g1, g2) => {\n        return g1.localeCompare(g2);\n      });\n      break;\n    case 'length':\n      visibleGoods.sort((g1, g2) => {\n        return g1.length - g2.length;\n      });\n      break;\n    default:\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}